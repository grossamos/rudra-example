// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "BSD-2-Clause",
            "url": "https://raw.githubusercontent.com/grossamos/rudra/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get information on rudra example API",
                "produces": [
                    "application/json"
                ],
                "summary": "provide basic info on this API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.BaseResponse"
                        }
                    }
                }
            }
        },
        "/validate": {
            "post": {
                "security": [
                    {
                        "CoolAuthStuff": []
                    }
                ],
                "description": "checks if a given state is a valid weather state",
                "produces": [
                    "application/json"
                ],
                "summary": "validates weather state",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.IsValid"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/weather": {
            "get": {
                "description": "gets current weather from a set of states",
                "produces": [
                    "application/json"
                ],
                "summary": "provides current weather",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.WeatherStatus"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.BaseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.IsValid": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "controller.WeatherStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "util.ErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CoolAuthStuff": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Rudra Example Project",
	Description:      "This is a sample project for the rudra test tool",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
